@import url('https://fonts.googleapis.com/css?family=Schoolbell&display=swap');

* {
  box-sizing: border-box;
}

body {
  font-family: 'Schoolbell', cursive;
  font-size: 2rem;
  margin: 0;
  padding: 2rem;
  background-color: rgb(222, 223, 171);
}

h1 {
  margin: 0;
  font-size: 3.8rem;
}

figure {
  margin: 0;
  background: rgba(lightBlue, 0.8);
  /*box-shadow: -0.035rem 0.03rem 0.3rem rgba(0, 0, 0, 0.2);*/
}

p {
  margin: 0;
  padding: 1.8rem;
  background-color: aliceBlue;
  box-shadow: -0.035rem 0.03rem 0.3rem rgba(0, 0, 0, 0.2);
  z-index: 1;
  position: relative;
}

img {
  object-fit: cover;
  width: 100%;
  height: 100%;
  display: block;
}

.grid {
  --verticalPadding: 2rem;
  --overlap: 6rem;
  display: grid;
  grid-template-columns: 5fr 1fr 4fr 2fr 3fr 3fr 2fr 4fr 1fr 5fr;
  grid-template-rows: 
    [header-start]
    auto
    [fig1-start]
    3rem
    [header-end]
    minmax(var(--verticalPadding), auto)
    [p1-start]
    minmax(0, auto)
    [p1-end]
    minmax(var(--verticalPadding), auto) 
    [fig2-start]
    var(--overlap) 
    [fig1-end]
    minmax(var(--verticalPadding), auto)
    [p2-start]
    minmax(0, auto)
    [p2-end]
    minmax(var(--verticalPadding), auto)
    [fig3-start]
    var(--overlap)
    [fig2-end]
    minmax(var(--verticalPadding), auto)
    [p3-start]
    minmax(0, auto)
    [p3-end]
    minmax(var(--verticalPadding), auto)
    [fig3-end];
  grid-auto-rows: minmax(var(--verticalPadding), auto);
  gap: 1rem;
  max-width: 75rem;
  margin: 0 auto;
  align-items: center;
  background: left top / 40rem no-repeat url(https://s3-us-west-2.amazonaws.com/s.cdpn.io/85648/paint-splatter-1.svg), right bottom / 40rem no-repeat url(https://s3-us-west-2.amazonaws.com/s.cdpn.io/85648/paint-splatter-2.svg);
}

.grid::before,
.grid::after {
  content: '';
  display: block;
}

.grid::before {
  background: left center / 20rem no-repeat url(https://s3-us-west-2.amazonaws.com/s.cdpn.io/85648/paint-splatter-3.svg);
  grid-column: 3 / -3;
  grid-row: 9 / span 4;
  width: 100%;
  height: 400px;
  position: relative;
  z-index: 2;
}

header {
  grid-column: 3 / -1;
  grid-row: header;
  padding: 2rem;
  box-shadow: -0.035rem 0.03rem 0.3rem rgba(0, 0, 0, 0.2);
  z-index: 1;
  text-align: center;
  background-color: aliceBlue;
}

.fig--1 {
  grid-column: span 5 / -6;
  grid-row: fig1;
}

.fig--2 {
  grid-column: 4 / span 7;
  grid-row: fig2;
}

.fig--3 {
  grid-column: span 5 / -6;
  grid-row: fig3;
  top: 10rem;
}

.fig--3 img {
  object-position: left;
}

.fig--4 {
  grid-column: 4 / span 6;
  grid-row: fig4;
  top: 15rem;
}

p:first-of-type {
  grid-column: 5 / span 4;
  grid-row: p1;
  z-index: 1;
  transform: rotate(-1deg);
  top: 40px;
}

p:nth-of-type(2) {
  grid-column: span 4 / -6;
  grid-row: p2;
  transform: rotate(0.8deg);
  top: 40px;
}

p:nth-of-type(3) {
  grid-column: 5 / span 6;
  grid-row: p3;
  transform: rotate(-0.7deg);
  top: 15rem;
}

p:nth-of-type(4) {
  grid-column: span 6 / -6;
  grid-row: p4;
  transform: rotate(0.8deg);
  top: 20rem;
}

[style*="--aspect-ratio"] {
  position: relative;
}

[style*="--aspect-ratio"]::before {
  content: "";
  display: block;
  padding-bottom: calc(100% / (var(--aspect-ratio)));
}  

[style*="--aspect-ratio"] > :first-child {
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
}

.polaroid {
    background: #fff;
    padding: 1rem;
    box-shadow: 0 0.2rem 1.2rem rgba(0,0,0,0.2);
    
  }
  .polaroid > img{
    max-width: 100%;
    height: auto;
  }
  .caption {
    font-size: 1.8rem;
    text-align: center;
    line-height: 2em;
  }
  .item {
    width: 110%;
    display: inline-block;
    margin-top: 4rem;
    filter: grayscale(100%);
  }
  .item .polaroid:before {
    content: '';
    position: absolute;
    z-index: -1;
    transition: all 0.35s;
  }
  .item:nth-of-type(4n+1) {
    transform: scale(0.8, 0.8) rotate(5deg);
    transition: all 0.35s;
  }
  .item:nth-of-type(4n+1) .polaroid:before {
    transform: rotate(6deg);
    height: 20%;
    width: 47%;
    bottom: 30px;
    right: 12px;
    /*box-shadow: 0 2.1rem 2rem rgba(0,0,0,0.4);*/
  }
  .item:nth-of-type(4n+2) {
    transform: scale(0.8, 0.8) rotate(-5deg);
    transition: all 0.35s;
  }
  .item:nth-of-type(4n+2) .polaroid:before {
    transform: rotate(-6deg);
    height: 20%;
    width: 47%;
    bottom: 30px;
    left: 12px;
    /*box-shadow: 0 2.1rem 2rem rgba(0,0,0,0.4);*/
  }
  .item:nth-of-type(4n+4) {
    transform: scale(0.8, 0.8) rotate(3deg);
    transition: all 0.35s;
  }
  .item:nth-of-type(4n+4) .polaroid:before {
    transform: rotate(4deg);
    height: 20%;
    width: 47%;
    bottom: 30px;
    right: 12px;
    /*box-shadow: 0 2.1rem 2rem rgba(0,0,0,0.3);*/
  }
  .item:nth-of-type(4n+3) {
    transform: scale(0.8, 0.8) rotate(-3deg);
    transition: all 0.35s;
  }
  .item:nth-of-type(4n+3) .polaroid:before {
    transform: rotate(-4deg);
    height: 20%;
    width: 47%;
    bottom: 30px;
    left: 12px;
    /*box-shadow: 0 2.1rem 2rem rgba(0,0,0,0.3);*/
  }
  .item:hover {
    filter: none;
    transform: scale(1, 1) rotate(0deg) !important;
    transition: all 0.35s;
  }
  .item:hover .polaroid:before {
    content: '';
    position: absolute;
    z-index: -1;
    transform: rotate(0deg);
    height: 90%;
    width: 90%;
    bottom: 0%;
    right: 5%;
    /*box-shadow: 0 1rem 3rem rgba(0,0,0,0.2);*/
    transition: all 0.35s;
  }

.wrapper a{
  position: relative;
  top: 25rem;
  left: 50%;
  transform: translate(-50%, -50%);
  display: flex;
  justify-content: center;
}

.wrapper .right {
  width: 100px;
  height: 3rem;
  margin: 0 2rem;
  cursor: pointer;
  overflow: visible;
  position: absolute;
  margin-left: 95%;
}

.wrapper .left {
  width: 100px;
  height: 3rem;
  margin: 0 2rem;
  cursor: pointer;
  overflow: visible;
  position: absolute;
  margin-right: 95%;
}

.wrapper .divider {
  width: 1200px;
}

.wrapper svg polygon, div svg path {
  transition: all 0.5s cubic-bezier(.2, 1, .3, 1);
}

.wrapper svg:hover polygon, div svg:hover path {
  transition: all 1s cubic-bezier(.2, 1, .3, 1);
  fill: #FF4136;
}

.wrapper svg:hover .arrow {
  animation: arrow-anim 2.5s cubic-bezier(.2, 1, .3, 1) infinite;
}

.wrapper svg:hover .arrow-fixed {
  animation: arrow-fixed-anim 2.5s cubic-bezier(.2, 1, .3, 1) infinite;
}

@keyframes arrow-anim {
  0% {
    opacity: 1;
    transform: translateX(0);
  }
  5% {
    transform: translateX(-0.1rem);
  }
  100% {
    transform: translateX(1rem);
    opacity: 0;
  }
}

@keyframes arrow-fixed-anim {
  5% {
    opacity: 0;
  }
  20% {
    opacity: 0.4;
  }
  100% {
    opacity: 1;
  }
}

  
